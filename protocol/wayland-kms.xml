<?xml version="1.0" encoding="UTF-8"?>
<protocol name="kms">

  <copyright>
    Copyright © 2013 Renesas Solutions Corp.

    Based on wayland-drm.xml:
    Copyright © 2008-2011 Kristian Høgsberg
    Copyright © 2010-2011 Intel Corporation

    Permission to use, copy, modify, distribute, and sell this
    software and its documentation for any purpose is hereby granted
    without fee, provided that\n the above copyright notice appear in
    all copies and that both that copyright notice and this permission
    notice appear in supporting documentation, and that the name of
    the copyright holders not be used in advertising or publicity
    pertaining to distribution of the software without specific,
    written prior permission.  The copyright holders make no
    representations about the suitability of this software for any
    purpose.  It is provided "as is" without express or implied
    warranty.

    THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD TO THIS
    SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
    FITNESS, IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY
    SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
    AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
    ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
    THIS SOFTWARE.
  </copyright>

  <!-- KMS BO support. This object is created by the server and published
       using the display's global event. -->
  <interface name="wl_kms" version="2">
    <enum name="error">
      <entry name="invalid_format" value="0"/>
      <entry name="invalid_fd" value="1"/>
      <entry name="invalid_handle" value="2"/>
      <entry name="authentication_failed" value="3"/>
    </enum>

    <enum name="format">
      <!-- The drm format codes match the #defines in drm_fourcc.h.
           The formats actually supported by the compositor will be
           reported by the format event. -->
      <entry name="c8" value="0x20203843"/>
      <entry name="rgb332" value="0x38424752"/>
      <entry name="bgr233" value="0x38524742"/>
      <entry name="xrgb4444" value="0x32315258"/>
      <entry name="xbgr4444" value="0x32314258"/>
      <entry name="rgbx4444" value="0x32315852"/>
      <entry name="bgrx4444" value="0x32315842"/>
      <entry name="argb4444" value="0x32315241"/>
      <entry name="abgr4444" value="0x32314241"/>
      <entry name="rgba4444" value="0x32314152"/>
      <entry name="bgra4444" value="0x32314142"/>
      <entry name="xrgb1555" value="0x35315258"/>
      <entry name="xbgr1555" value="0x35314258"/>
      <entry name="rgbx5551" value="0x35315852"/>
      <entry name="bgrx5551" value="0x35315842"/>
      <entry name="argb1555" value="0x35315241"/>
      <entry name="abgr1555" value="0x35314241"/>
      <entry name="rgba5551" value="0x35314152"/>
      <entry name="bgra5551" value="0x35314142"/>
      <entry name="rgb565" value="0x36314752"/>
      <entry name="bgr565" value="0x36314742"/>
      <entry name="rgb888" value="0x34324752"/>
      <entry name="bgr888" value="0x34324742"/>
      <entry name="xrgb8888" value="0x34325258"/>
      <entry name="xbgr8888" value="0x34324258"/>
      <entry name="rgbx8888" value="0x34325852"/>
      <entry name="bgrx8888" value="0x34325842"/>
      <entry name="argb8888" value="0x34325241"/>
      <entry name="abgr8888" value="0x34324241"/>
      <entry name="rgba8888" value="0x34324152"/>
      <entry name="bgra8888" value="0x34324142"/>
      <entry name="xrgb2101010" value="0x30335258"/>
      <entry name="xbgr2101010" value="0x30334258"/>
      <entry name="rgbx1010102" value="0x30335852"/>
      <entry name="bgrx1010102" value="0x30335842"/>
      <entry name="argb2101010" value="0x30335241"/>
      <entry name="abgr2101010" value="0x30334241"/>
      <entry name="rgba1010102" value="0x30334152"/>
      <entry name="bgra1010102" value="0x30334142"/>
      <entry name="yuyv" value="0x56595559"/>
      <entry name="yvyu" value="0x55595659"/>
      <entry name="uyvy" value="0x59565955"/>
      <entry name="vyuy" value="0x59555956"/>
      <entry name="ayuv" value="0x56555941"/>
      <entry name="nv12" value="0x3231564e"/>
      <entry name="nv21" value="0x3132564e"/>
      <entry name="nv16" value="0x3631564e"/>
      <entry name="nv61" value="0x3136564e"/>
      <entry name="yuv410" value="0x39565559"/>
      <entry name="yvu410" value="0x39555659"/>
      <entry name="yuv411" value="0x31315559"/>
      <entry name="yvu411" value="0x31315659"/>
      <entry name="yuv420" value="0x32315559"/>
      <entry name="yvu420" value="0x32315659"/>
      <entry name="yuv422" value="0x36315559"/>
      <entry name="yvu422" value="0x36315659"/>
      <entry name="yuv444" value="0x34325559"/>
      <entry name="yvu444" value="0x34325659"/>
    </enum>

    <!-- DRM Authentication. Clients should send magic value
         got with drmGetMagic(). -->
    <request name="authenticate">
      <arg name="magic" type="uint"/>
    </request>

    <!-- Create a wayland buffer for the KMS BO buffer.  The KMS
         surface must have a prime FD. -->
    <request name="create_buffer">
      <arg name="id" type="new_id" interface="wl_buffer"/>
      <arg name="fd" type="fd"/>	<!-- DMABUF/PRIME FD -->
      <arg name="width" type="int"/>
      <arg name="height" type="int"/>
      <arg name="stride" type="uint"/>
      <arg name="format" type="uint"/>
      <arg name="handle" type="uint"/>	<!-- XXX: Unused -->
    </request>

    <!-- Create a wayland buffer for the KMS BO buffer. The KMS
         surface must have a prime FD. This is for a multi-planer. -->
    <request name="create_mp_buffer" since="2">
      <arg name="id" type="new_id" interface="wl_buffer"/>
      <arg name="width" type="int" summary="Width"/>
      <arg name="height" type="int" summary="Height"/>
      <arg name="format" type="uint" summary="Pixelformat"/>
      <arg name="fd0" type="fd" summary="DMABUF/PRIME FD for plane0"/>
      <arg name="stride0" type="uint" summary="Stride for plane0"/>
      <arg name="fd1" type="fd" summary="DMABUF/PRIME FD for plane1"/>
      <arg name="stride1" type="uint" summary="Stride for plane1"/>
      <arg name="fd2" type="fd" summary="DMABUF/PRIME FD for plane2"/>
      <arg name="stride2" type="uint" summary="Stride for plane2"/>
    </request>

    <!-- Notification of the path of the drm device which is used by
         the server.  The client should use this device for creating
         local buffers.  Only buffers created from this device should
         be be passed to the server using this drm object's
         create_buffer request. -->
    <event name="device">
      <arg name="name" type="string"/>
    </event>

    <event name="format">
      <arg name="format" type="uint"/>
    </event>

    <!-- Sent if the authentication succeeded -->
    <event name="authenticated"/>

  </interface>

</protocol>
